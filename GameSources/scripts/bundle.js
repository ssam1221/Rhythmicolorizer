/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./GameSources/scripts/BGMDatabase.js":
/*!********************************************!*\
  !*** ./GameSources/scripts/BGMDatabase.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ BGMDatabase)\n/* harmony export */ });\n/* harmony import */ var _Common_Debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Common/Debug */ \"./GameSources/scripts/Common/Debug.js\");\n\r\n\r\nconst debug = new _Common_Debug__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\r\n    filename: `BGMDatabase`\r\n});\r\n\r\nclass BGMDatabase {\r\n\r\n    static BGMDataList = {};\r\n\r\n    static player;\r\n\r\n    static async initialize() {\r\n        try {\r\n            debug.log(`Initializing...`);\r\n            this.BGMDataList = await (await fetch(`data/BGMList.json`)).json();\r\n            // debug.log(this.BGMDataList)\r\n\r\n            for (let idx = 0; idx < this.BGMDataList.length; idx++) {\r\n                const BGMData = this.BGMDataList[idx];\r\n                this.BGMDataList[idx].coverImage = this.getCoverImage(BGMData.title);\r\n                const noteList = await (await fetch(`data/notes/${BGMData.title}.json`)).json();\r\n                this.BGMDataList[idx].data.noteList = noteList;\r\n                // debug.log(noteList);\r\n                debug.log(`Loading [${BGMData.title}]...`)\r\n            }\r\n            debug.log(`BGM Data : `, this.BGMDataList);\r\n        } catch (err) {\r\n            debug.error(err);\r\n        }\r\n    }\r\n\r\n    static getAllData() {\r\n        return this.BGMDataList;\r\n    }\r\n\r\n    static getCoverImage(title) {\r\n        return `data/coverImages/${title}.png`;\r\n    }\r\n\r\n    static getDataByTitle(title) {\r\n        for (const bgm of this.BGMDataList) {\r\n            if (bgm.title === title) {\r\n                return bgm;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    static getDataByIndex(idx) {\r\n        return this.BGMDataList[idx];\r\n    }\r\n}\n\n//# sourceURL=webpack:///./GameSources/scripts/BGMDatabase.js?");

/***/ }),

/***/ "./GameSources/scripts/Common/DOMConatiners.js":
/*!*****************************************************!*\
  !*** ./GameSources/scripts/Common/DOMConatiners.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ DOMConatiners)\n/* harmony export */ });\n/* harmony import */ var _Debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Debug */ \"./GameSources/scripts/Common/Debug.js\");\n/**\r\n * @class DOMContainers\r\n * @description All DOM div elements are initialized from this code\r\n */\r\n\r\n\r\n\r\nconst debug = new _Debug__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\r\n    filename: `DOMConatinerController`\r\n})\r\n\r\nclass DOMConatiners {\r\n\r\n    static currentDisplayingContainer = null;\r\n\r\n    static MainContainer = {\r\n        SelectMusicScreen: `SelectMusicScreen`,\r\n        GamePlayScreen: `GamePlayScreen`\r\n    }\r\n\r\n    static Containers = {\r\n        Main: {\r\n            GamePlayScreen: null,\r\n            SelectMusicScreen: null,\r\n        },\r\n        GamePlayScreenContainer: {\r\n            ComboCount: null,\r\n            GameScore: null,\r\n            Difficulty: null,\r\n            GetReadyText: null,\r\n            keynotesContainerBackground: null,\r\n            pressedkeynotesContainer: null,\r\n            keynotesContainerContainer: null,\r\n            keynotesContainers: null,\r\n            keynoteCheckerContainer: null,\r\n            keynoteCheckers: null,\r\n            pointDisplayContainer: null,\r\n            BGMPreviewPlayer: null\r\n        },\r\n        SelectMusicScreenContainer: {\r\n            CoverImageContainer: null,\r\n            CoverImages: null,\r\n            SelectedMusicInfoContainer: null,\r\n            SelectMusicScreen_SelectedMusicInfo: null\r\n        }\r\n    }\r\n\r\n    static initialize() {\r\n        debug.log(`Initialize...`);\r\n        this.Containers.Main.GamePlayScreen = document.getElementById(`GamePlayScreen`);\r\n        this.Containers.Main.SelectMusicScreen = document.getElementById(`SelectMusicScreen`);\r\n\r\n        this.Containers.GamePlayScreenContainer.ComboCount = document.getElementById(`ComboCount`);\r\n        this.Containers.GamePlayScreenContainer.GameScore = document.getElementById(`GameScore`);\r\n        this.Containers.GamePlayScreenContainer.Difficulty = document.getElementById(`Difficulty`);\r\n        this.Containers.GamePlayScreenContainer.GetReadyText = document.getElementById(`getReadyText`);\r\n        this.Containers.GamePlayScreenContainer.keynotesContainerBackground = document.getElementById(`keynotesContainerBackground`);\r\n        this.Containers.GamePlayScreenContainer.pressedkeynotesContainer = document.getElementById(`keynotePressedContainer`);\r\n        this.Containers.GamePlayScreenContainer.keynotesContainerContainer = document.getElementById(`keynotesContainer`);\r\n        this.Containers.GamePlayScreenContainer.keynotesContainers = document.getElementsByClassName(`keynotesContainer`);\r\n        this.Containers.GamePlayScreenContainer.keynoteCheckerContainer = document.getElementById(`keynoteChecker`);\r\n        this.Containers.GamePlayScreenContainer.keynoteCheckers = document.getElementsByClassName(`keynoteChecker`);\r\n        this.Containers.GamePlayScreenContainer.pointDisplayContainer = document.getElementById(`pointDisplay`);\r\n\r\n        this.Containers.SelectMusicScreenContainer.BGMPreviewPlayer = document.getElementById(`BGMPreviewPlayer`);\r\n        this.Containers.SelectMusicScreenContainer.CoverImageContainer = document.getElementById(`SelectMusicScreen_CoverImageContainer`);\r\n        this.Containers.SelectMusicScreenContainer.SelectedMusicInfoContainer = document.getElementById(`SelectMusicScreen_SelectedMusicInfo`);\r\n    }\r\n\r\n\r\n    static get() {\r\n        return this.Containers;\r\n    }\r\n\r\n    static getCurrentMainContainerName() {\r\n        return this.currentDisplayingContainer;\r\n    }\r\n\r\n    static showMainContainer(containerName) {\r\n        if (containerName in this.Containers.Main === true) {\r\n            this.currentDisplayingContainer = containerName;\r\n            for (const _container in this.Containers.Main) {\r\n                console.log(_container)\r\n                this.Containers.Main[_container].style.display = `hidden`;\r\n            }\r\n            this.Containers.Main[containerName].style.display = `inline-block`;\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack:///./GameSources/scripts/Common/DOMConatiners.js?");

/***/ }),

/***/ "./GameSources/scripts/Common/Debug.js":
/*!*********************************************!*\
  !*** ./GameSources/scripts/Common/Debug.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Debug)\n/* harmony export */ });\nlet debugMode = `debug`;\r\n\r\nclass Debug {\r\n\r\n    constructor({\r\n        filename\r\n    }) {\r\n        this.filename = filename;\r\n    }\r\n\r\n    static setDebugMode(_debugMode) {\r\n        console.log(`Set debug mode to : ${_debugMode}`)\r\n        debugMode = _debugMode;\r\n    }\r\n\r\n    getFormattedDate() {\r\n        const now = new Date();\r\n        return `[${now.getFullYear()}/${(`00` + (now.getMonth()+1)).substr(-2)}/${(`00` + now.getDate()).substr(-2)} ` +\r\n            `${(`00` + (now.getHours()+1)).substr(-2)}:${(`00` + (now.getMinutes()+1)).substr(-2)}:${(`00` + (now.getSeconds()+1)).substr(-2)}]`;\r\n    }\r\n\r\n    info(...str) {\r\n        const _filename = `                         ${this.filename}`.substr(-20);\r\n        console.info(`[ INFO]${this.getFormattedDate()}[${_filename}] `, ...str)\r\n    }\r\n\r\n    warn(...str) {\r\n        const _filename = `                         ${this.filename}`.substr(-20);\r\n        console.warn(`[ WARN]${this.getFormattedDate()}[${_filename}] `, ...str)\r\n    }\r\n\r\n    error(...str) {\r\n        const _filename = `                         ${this.filename}`.substr(-20);\r\n        console.error(`[ERROR]${this.getFormattedDate()}[${_filename}] `, ...str)\r\n    }\r\n\r\n    log(...str) {\r\n        const _filename = `                         ${this.filename}`.substr(-20);\r\n        console.log(`[  LOG]${this.getFormattedDate()}[${_filename}] `, ...str)\r\n    }\r\n}\n\n//# sourceURL=webpack:///./GameSources/scripts/Common/Debug.js?");

/***/ }),

/***/ "./GameSources/scripts/Common/KeyboardEventListener.js":
/*!*************************************************************!*\
  !*** ./GameSources/scripts/Common/KeyboardEventListener.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ KeyboardEventListener)\n/* harmony export */ });\n/* harmony import */ var _SelectBGMScreen_BGMSelector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../SelectBGMScreen/BGMSelector */ \"./GameSources/scripts/SelectBGMScreen/BGMSelector.js\");\n/* harmony import */ var _DOMConatiners__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./DOMConatiners */ \"./GameSources/scripts/Common/DOMConatiners.js\");\n/* harmony import */ var _GamePlayScreen_NoteCreator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../GamePlayScreen/NoteCreator */ \"./GameSources/scripts/GamePlayScreen/NoteCreator.js\");\n\r\n\r\n\r\n\r\nclass KeyboardEventListener {\r\n    static addKeyboardEventListener() {\r\n        document.addEventListener(`keydown`, (e) => {\r\n            // console.log(`addKeyboardEventListener : `, e)\r\n\r\n            switch (_DOMConatiners__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getCurrentMainContainerName()) {\r\n                case ``:\r\n\r\n                    break;\r\n                case `MainMenu`:\r\n                    break;\r\n                case `Loading`:\r\n\r\n                    break;\r\n                case `SelectMusicScreen`:\r\n                    _SelectBGMScreen_BGMSelector__WEBPACK_IMPORTED_MODULE_0__[\"default\"].onBGMSelectorKeyPressed(e);\r\n                    break;\r\n                case `GamePlayScreen`:\r\n                    _GamePlayScreen_NoteCreator__WEBPACK_IMPORTED_MODULE_2__[\"default\"].onkeypress(e);\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n}\n\n//# sourceURL=webpack:///./GameSources/scripts/Common/KeyboardEventListener.js?");

/***/ }),

/***/ "./GameSources/scripts/Common/SFXPlayer.js":
/*!*************************************************!*\
  !*** ./GameSources/scripts/Common/SFXPlayer.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ SFXPlayer)\n/* harmony export */ });\nclass SFXPlayer {\r\n    static SfxPlayerContainer;\r\n\r\n    static NUM_AUDIO_TAG = 100;\r\n    static AudioTags = [];\r\n    static currentAudioTagIndex = 0;\r\n\r\n    static initialize() {\r\n        this.SfxPlayerContainer = document.getElementById(`sfxPlayerContainer`);\r\n        for (let i = 0; i < this.NUM_AUDIO_TAG; i++) {\r\n            const audioTag = document.createElement(`audio`);\r\n            audioTag.id = `SFXPlayer_${i}`\r\n            audioTag.setAttribute = (`class`, `SFXPlayer`);\r\n            this.SfxPlayerContainer.appendChild(audioTag);\r\n            this.AudioTags[i] = audioTag;\r\n        }\r\n    }\r\n\r\n    static play(src) {\r\n        if (typeof src !== `string`) {\r\n            return;\r\n        }\r\n        this.AudioTags[this.currentAudioTagIndex].src = `data/sfx/${src}`;\r\n        this.AudioTags[this.currentAudioTagIndex].play();\r\n        this.currentAudioTagIndex = (++this.currentAudioTagIndex) % this.NUM_AUDIO_TAG;\r\n    }\r\n}\n\n//# sourceURL=webpack:///./GameSources/scripts/Common/SFXPlayer.js?");

/***/ }),

/***/ "./GameSources/scripts/GamePlayScreenController.js":
/*!*********************************************************!*\
  !*** ./GameSources/scripts/GamePlayScreenController.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ GamePlayScreenController)\n/* harmony export */ });\n/* harmony import */ var _GamePlayScreen_BGMPlayer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GamePlayScreen/BGMPlayer */ \"./GameSources/scripts/GamePlayScreen/BGMPlayer.js\");\n/* harmony import */ var _GamePlayScreen_NoteCreator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./GamePlayScreen/NoteCreator */ \"./GameSources/scripts/GamePlayScreen/NoteCreator.js\");\n\r\n\r\n\r\nclass GamePlayScreenController {\r\n\r\n    static startGameByTitle(title, difficulty) {\r\n        _GamePlayScreen_BGMPlayer__WEBPACK_IMPORTED_MODULE_0__[\"default\"].setVideo(title, ({\r\n            status,\r\n            payload\r\n        }) => {\r\n            if (status === `GameReady`) {\r\n                _GamePlayScreen_NoteCreator__WEBPACK_IMPORTED_MODULE_1__[\"default\"].start(title, difficulty);\r\n                payload.play();\r\n            } else if (status === `GameCompleted`) {}\r\n        });\r\n    }\r\n}\n\n//# sourceURL=webpack:///./GameSources/scripts/GamePlayScreenController.js?");

/***/ }),

/***/ "./GameSources/scripts/GamePlayScreen/BGMPlayer.js":
/*!*********************************************************!*\
  !*** ./GameSources/scripts/GamePlayScreen/BGMPlayer.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ BGMPlayer)\n/* harmony export */ });\n/* harmony import */ var _BGMDatabase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../BGMDatabase */ \"./GameSources/scripts/BGMDatabase.js\");\n/* harmony import */ var _Common_DOMConatiners__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Common/DOMConatiners */ \"./GameSources/scripts/Common/DOMConatiners.js\");\n/* harmony import */ var _NoteCreator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./NoteCreator */ \"./GameSources/scripts/GamePlayScreen/NoteCreator.js\");\n/* harmony import */ var _Common_SFXPlayer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Common/SFXPlayer */ \"./GameSources/scripts/Common/SFXPlayer.js\");\n/* harmony import */ var _Common_Debug__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Common/Debug */ \"./GameSources/scripts/Common/Debug.js\");\n\r\n\r\n\r\n\r\n\r\n\r\nconst debug = new _Common_Debug__WEBPACK_IMPORTED_MODULE_4__[\"default\"]({\r\n    filename: `BGMPlayer`\r\n});\r\n\r\nclass BGMPlayer {\r\n\r\n    static isInitialized = false;\r\n\r\n    static currentBGM = ``;\r\n    static isBGMStart = false;\r\n    static isGameStart = false;\r\n    static player;\r\n\r\n    static initialize() {\r\n        if (this.isInitialized === false) {\r\n            // Do something\r\n        }\r\n    }\r\n\r\n    static getBGMDuration() {\r\n        // Seconds\r\n        return self.player.getDuration();\r\n    }\r\n\r\n    // Refer : https://developers.google.com/youtube/iframe_api_reference?hl=ko#loadVideoById\r\n    static setVideo(title, callback) {\r\n        const self = this;\r\n\r\n        debug.log(`SetVideo : [${title}]`);\r\n        const selectedBGM = _BGMDatabase__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getDataByTitle(title);\r\n\r\n        debug.log(selectedBGM);\r\n        // debug.log(selectedBGM.data.youtube)\r\n\r\n        self.player = new YT.Player(`youtubeVideoPlayer`, {\r\n            height: `800`,\r\n            width: `800`,\r\n            videoId: selectedBGM.data.youtube,\r\n            playerVars: {\r\n                'controls': 0,\r\n\r\n                // 'autoplay': 1,\r\n                // 'loop': 1,\r\n                // 'mute': 1 // N.B. here the mute settings.\r\n            },\r\n            events: {\r\n                onReady: onPlayerReady,\r\n                onStateChange: onPlayerStateChange\r\n            }\r\n        });\r\n\r\n        // 4. The API will call this function when the video player is ready.\r\n        function onPlayerReady(event) {\r\n            // console.log(`onPlayerReady : `, event);\r\n            self.player.playVideo();\r\n        }\r\n\r\n        // 5. The API calls this function when the player`s state changes.\r\n        //    The function indicates that when playing a video (state=1),\r\n        //    the player should play for six seconds and then stop.\r\n\r\n        function countdown() {\r\n            return new Promise((resolve, reject) => {\r\n                _Common_DOMConatiners__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get().GamePlayScreenContainer.GetReadyText.innerHTML = `Get<br>Ready?`;\r\n                _Common_SFXPlayer__WEBPACK_IMPORTED_MODULE_3__[\"default\"].play(`voice/get_ready.wav`);\r\n                _Common_DOMConatiners__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get().GamePlayScreenContainer.GetReadyText.setAttribute(`class`, `GetReadyAnimation`);\r\n                setTimeout(() => {\r\n                    _Common_DOMConatiners__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get().GamePlayScreenContainer.GetReadyText.setAttribute(`class`, ``);\r\n                    _Common_SFXPlayer__WEBPACK_IMPORTED_MODULE_3__[\"default\"].play(`voice/three.wav`);\r\n                    _Common_DOMConatiners__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get().GamePlayScreenContainer.GetReadyText.innerHTML = `3`;\r\n                    setTimeout(() => {\r\n                        _Common_DOMConatiners__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get().GamePlayScreenContainer.GetReadyText.setAttribute(`class`, `GetReadyAnimation`);\r\n                    });\r\n                }, 1000);\r\n                setTimeout(() => {\r\n                    _Common_DOMConatiners__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get().GamePlayScreenContainer.GetReadyText.setAttribute(`class`, ``);\r\n                    _Common_SFXPlayer__WEBPACK_IMPORTED_MODULE_3__[\"default\"].play(`voice/two.wav`);\r\n                    _Common_DOMConatiners__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get().GamePlayScreenContainer.GetReadyText.innerHTML = `2`;\r\n                    setTimeout(() => {\r\n                        _Common_DOMConatiners__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get().GamePlayScreenContainer.GetReadyText.setAttribute(`class`, `GetReadyAnimation`);\r\n                    });\r\n                }, 2000);\r\n                setTimeout(() => {\r\n                    _Common_DOMConatiners__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get().GamePlayScreenContainer.GetReadyText.setAttribute(`class`, ``);\r\n                    _Common_SFXPlayer__WEBPACK_IMPORTED_MODULE_3__[\"default\"].play(`voice/one.wav`);\r\n                    _Common_DOMConatiners__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get().GamePlayScreenContainer.GetReadyText.innerHTML = `1`;\r\n                    setTimeout(() => {\r\n                        _Common_DOMConatiners__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get().GamePlayScreenContainer.GetReadyText.setAttribute(`class`, `GetReadyAnimation`);\r\n                    });\r\n                }, 3000);\r\n                setTimeout(() => {\r\n                    _Common_DOMConatiners__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get().GamePlayScreenContainer.GetReadyText.setAttribute(`class`, ``);\r\n                    _Common_SFXPlayer__WEBPACK_IMPORTED_MODULE_3__[\"default\"].play(`voice/start.wav`);\r\n                    _Common_DOMConatiners__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get().GamePlayScreenContainer.GetReadyText.innerHTML = `Start!`;\r\n                    setTimeout(() => {\r\n                        _Common_DOMConatiners__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get().GamePlayScreenContainer.GetReadyText.setAttribute(`class`, `GetReadyAnimation`);\r\n                    });\r\n                }, 4000);\r\n                setTimeout(() => {\r\n                    const prevClassOfkeynotesContainerBackground = _Common_DOMConatiners__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get().GamePlayScreenContainer.keynotesContainerBackground.getAttribute(`class`),\r\n                        prevClassOfkeynoteChecker = _Common_DOMConatiners__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get().GamePlayScreenContainer.keynoteCheckerContainer.getAttribute(`class`),\r\n                        prevClassOfkeynotesContainers = _Common_DOMConatiners__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get().GamePlayScreenContainer.keynotesContainers[0].getAttribute(`class`);\r\n                    _Common_DOMConatiners__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get().GamePlayScreenContainer.keynoteCheckerContainer.setAttribute(`class`, `${prevClassOfkeynoteChecker} transparentFadeIn`);\r\n                    _Common_DOMConatiners__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get().GamePlayScreenContainer.Difficulty.style.opacity = 1;\r\n                    _Common_DOMConatiners__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get().GamePlayScreenContainer.keynotesContainerBackground.setAttribute(`class`, `${prevClassOfkeynotesContainerBackground} transparentFadeIn`);\r\n                    for (const el of _Common_DOMConatiners__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get().GamePlayScreenContainer.keynotesContainers) {\r\n                        el.setAttribute(`class`, `${prevClassOfkeynotesContainers} transparentFadeIn`);\r\n                    }\r\n                    setTimeout(() => {\r\n                        _Common_DOMConatiners__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get().GamePlayScreenContainer.keynotesContainerBackground.style.opacity = 0.2;\r\n                        _Common_DOMConatiners__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get().GamePlayScreenContainer.keynoteCheckerContainer.style.opacity = 0.2;\r\n                        for (const el of _Common_DOMConatiners__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get().GamePlayScreenContainer.keynotesContainers) {\r\n                            el.style.opacity = 0.2;\r\n                        }\r\n                    })\r\n                    _Common_DOMConatiners__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get().GamePlayScreenContainer.GetReadyText.setAttribute(`class`, ``);\r\n                    _Common_DOMConatiners__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get().GamePlayScreenContainer.GetReadyText.innerHTML = ``;\r\n                    resolve();\r\n                }, 5000);\r\n                // }, 2000);\r\n            })\r\n        }\r\n\r\n        // UNSTARTED: -1\r\n        // ENDED: 0\r\n        // PLAYING: 1\r\n        // PAUSED: 2\r\n        // BUFFERING: 3\r\n        // CUED: 5\r\n\r\n        async function onPlayerStateChange(event) {\r\n            console.log(event)\r\n            if (self.isBGMStart === false) {\r\n                self.isBGMStart = true;\r\n                self.player.pauseVideo();\r\n                await countdown();\r\n                debug.log(`self.isBGMStart `, self.isBGMStart);\r\n                self.isGameStart = true;\r\n                // NoteCreator.start();\r\n                // console.log(`onPlayerStateChange `, event)\r\n                // if (event.data === YT.PlayerState.PLAYING) {\r\n                // setTimeout(stopVideo, 6000);\r\n                // console.log(YT.PlayerState)\r\n                callback({\r\n                    status: `GameReady`,\r\n                    payload: {\r\n                        play: () => {\r\n                            self.player.playVideo();\r\n                        }\r\n                    }\r\n                })\r\n\r\n            }\r\n            if (self.isBGMStart === true) {\r\n                if (event.data === YT.PlayerState.ENDED) {\r\n                    callback({\r\n                        status: `GameCompleted`,\r\n                        payload: {}\r\n                    })\r\n                }\r\n            }\r\n        }\r\n\r\n        // function stopVideo() {\r\n        //     player.stopVideo();\r\n        // }\r\n    }\r\n\r\n    static play() {\r\n        this.player.playVideo();\r\n    }\r\n}\n\n//# sourceURL=webpack:///./GameSources/scripts/GamePlayScreen/BGMPlayer.js?");

/***/ }),

/***/ "./GameSources/scripts/GamePlayScreen/NoteCreator.js":
/*!***********************************************************!*\
  !*** ./GameSources/scripts/GamePlayScreen/NoteCreator.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ NoteCreator)\n/* harmony export */ });\n/* harmony import */ var _BGMDatabase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../BGMDatabase */ \"./GameSources/scripts/BGMDatabase.js\");\n/* harmony import */ var _Common_Debug__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Common/Debug */ \"./GameSources/scripts/Common/Debug.js\");\n/* harmony import */ var _Common_DOMConatiners__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Common/DOMConatiners */ \"./GameSources/scripts/Common/DOMConatiners.js\");\n/* harmony import */ var _BGMPlayer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./BGMPlayer */ \"./GameSources/scripts/GamePlayScreen/BGMPlayer.js\");\n/* harmony import */ var _ScoreController__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ScoreController */ \"./GameSources/scripts/GamePlayScreen/ScoreController.js\");\n/* harmony import */ var _Common_SFXPlayer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Common/SFXPlayer */ \"./GameSources/scripts/Common/SFXPlayer.js\");\n// TODO : 노트 생성/판정 및 게임 점수 등 코드 분리\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst debug = new _Common_Debug__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({\r\n    filename: `NoteCreator`\r\n})\r\n\r\nclass NoteCreator {\r\n\r\n    static isInitialized = false;\r\n\r\n    static Difficulty = {\r\n        EASY: `Easy`,\r\n        NORMAL: `Normal`,\r\n        HARD: `Hard`,\r\n        XTREME: `Xtreme`,\r\n    }\r\n\r\n    static currentDifficulty = ``;\r\n\r\n    static POINT_MATCHED_CLASS_NAME = `pointDisplay`\r\n    static MUSIC_NOTE_CLASS_NAME = `MUSIC_NOTE`;\r\n    static PRESSED_CLASS_NAME = `PRESSED_NOTE`;\r\n    static MAX_NUM_OF_NOTES = 200;\r\n    static KEYPRESS_FPS = 1000 / this.MAX_NUM_OF_NOTES;\r\n    static currentNoteIndex = 0;\r\n    static currentKeyPressNoteIndex = 0;\r\n    static currentPointMatchedIndex = 0;\r\n\r\n    static NOTE_SPEED = 2;\r\n    static NOTE_PRESS_DIFF = 0;\r\n    static NOTE_ACTIVATING_TIMESTAMP = 1300;\r\n    static NOTE_SHOWING_TIMESTAMP = this.NOTE_SPEED * 1000;\r\n    // static NOTE_CHECK_DELAY_TIMESTAMP = 200; // / 2;\r\n    static NOTE_CHECK_DELAY_TIMESTAMP = 1500;\r\n    // static NOTE_CHECK_DELAY_TIMESTAMP = parseInt(this.NOTE_SHOWING_TIMESTAMP + (370 / this.NOTE_SPEED)); // / 2;\r\n\r\n    static keypressDivInterval;\r\n\r\n    static isPaused = false;\r\n    static currentCheckingNoteIndex = 0;\r\n    static noteList = [];\r\n    static pointMatchedList = [];\r\n    static musicNoteList = [];\r\n    static keypressNotes = [];\r\n    static timeoutFunctionList = [];\r\n\r\n    static activateNoteList = [];\r\n\r\n    static StartTime = null;\r\n    static NOTE_STATUS = {\r\n        IDLE: `Idle`,\r\n        SHOWING: `Showing`,\r\n        ACTIVATING: `Activating`,\r\n        CATCHED: `Catched`,\r\n        MISSED: `Missed`\r\n    }\r\n    static NOTE_SIZE = {\r\n        HEIGHT: `128px`\r\n    }\r\n\r\n    static NOTE_POSITION = {\r\n        '`1234567890-=\\\\~!@#$%^&*()_+|': 0,\r\n        'qwertyuiop[]QWERTYUIOP{}': 1,\r\n        'asdfghjkl;\\'ASDFGHJKL:\"': 2,\r\n        'zxcvbnm,./ZXCVBNM<>?': 3,\r\n    }\r\n\r\n    static SHIFT_USED_NOTE = [\r\n        '~!@#$%^&*()_+|',\r\n        'QWERTYUIOP{}',\r\n        'ASDFGHJKL:\"',\r\n        'ZXCVBNM<>?'\r\n    ]\r\n\r\n    static PointCheck = {\r\n        Perfect: 50,\r\n        Good: 100,\r\n        Bad: 300,\r\n        Miss: 99999\r\n    }\r\n\r\n    static initialize() {\r\n        if (this.isInitialized === false) {\r\n            debug.log(`Initializing...`);\r\n            this.createkeypressNotes();\r\n            this.createPointMatchedElements();\r\n        }\r\n    }\r\n\r\n    static getCurrentNoteIndex() {\r\n        this.currentNoteIndex = (++this.currentNoteIndex) % this.MAX_NUM_OF_NOTES;\r\n        return this.currentNoteIndex;\r\n    }\r\n    static getCurrentKeyPressNoteIndex() {\r\n        this.currentKeyPressNoteIndex = (++this.currentKeyPressNoteIndex) % this.MAX_NUM_OF_NOTES;\r\n        return this.currentKeyPressNoteIndex;\r\n    }\r\n    static getCurrentDifficulty() {\r\n        return this.currentDifficulty;\r\n    }\r\n\r\n    static setNotes(bgmTitle, Difficulty) {\r\n        debug.log(`Set notes for title : [${Difficulty}][${bgmTitle}]...`);\r\n        this.noteList = _BGMDatabase__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getDataByTitle(bgmTitle).data.noteList[Difficulty];\r\n        for (let idx = 0; idx < this.noteList.length; idx++) {\r\n            this.noteList[idx].status = this.NOTE_STATUS.IDLE;\r\n        }\r\n        this.currentDifficulty = Difficulty;\r\n        document.getElementById(`Difficulty`).innerHTML = `Difficulty : ${Difficulty}`;\r\n        debug.log(`Notes : `, this.noteList);\r\n    }\r\n\r\n    static createkeypressNotes() {\r\n        for (let i = 0; i < this.MAX_NUM_OF_NOTES; i++) {\r\n            const musicNoteDiv = document.createElement(`div`);\r\n            musicNoteDiv.id = `musicNote_${i}`;\r\n            musicNoteDiv.setAttribute(`class`, this.MUSIC_NOTE_CLASS_NAME);\r\n            _Common_DOMConatiners__WEBPACK_IMPORTED_MODULE_2__[\"default\"].get().GamePlayScreenContainer.keynotesContainerContainer.appendChild(musicNoteDiv);\r\n\r\n            const pressedNotediv = document.createElement(`div`);\r\n            pressedNotediv.id = `keypressNote_${i}`;\r\n            pressedNotediv.setAttribute(`class`, this.PRESSED_CLASS_NAME);\r\n            _Common_DOMConatiners__WEBPACK_IMPORTED_MODULE_2__[\"default\"].get().GamePlayScreenContainer.pressedkeynotesContainer.appendChild(pressedNotediv);\r\n        }\r\n    }\r\n\r\n    static createPointMatchedElements() {\r\n        for (let i = 0; i < this.MAX_NUM_OF_NOTES; i++) {\r\n            const pointMatchedElements = document.createElement(`div`);\r\n            pointMatchedElements.id = `pointMatched_${i}`;\r\n            pointMatchedElements.setAttribute(`class`, this.POINT_MATCHED_CLASS_NAME);\r\n            this.pointMatchedList.push(pointMatchedElements);\r\n            _Common_DOMConatiners__WEBPACK_IMPORTED_MODULE_2__[\"default\"].get().GamePlayScreenContainer.pointDisplayContainer.appendChild(pointMatchedElements);\r\n        }\r\n    }\r\n\r\n    static add({\r\n        what,\r\n        timestamp\r\n    }) {\r\n\r\n    }\r\n\r\n    static read() {\r\n\r\n    }\r\n\r\n    // Render\r\n    static create() {\r\n\r\n    }\r\n\r\n    // If typed\r\n    static pop() {\r\n        const timestamp = this.StartTime.getTime() - new Date().getTime();\r\n    }\r\n\r\n    static async start(title, difficulty) {\r\n        const self = this;\r\n        debug.log(`Start to create notes...`);\r\n        debug.log(`Note create delay : ${self.NOTE_CHECK_DELAY_TIMESTAMP}`);\r\n        // Temp\r\n        this.setNotes(title, difficulty);\r\n        // Temp\r\n        _ScoreController__WEBPACK_IMPORTED_MODULE_4__[\"default\"].initialize(this.noteList);\r\n        for (const _note of this.noteList) {\r\n            ((note) => {\r\n                // debug.log(`Note show timestamp : ${note.timestamp} - ${self.NOTE_CHECK_DELAY_TIMESTAMP}`);\r\n                this.timeoutFunctionList.push(\r\n                    setTimeout(() => {\r\n                        this.renderMusicNote(note.key);\r\n\r\n                        // debug.log(`Showing note : ${note.key}`);\r\n                        note.status = self.NOTE_STATUS.SHOWING;\r\n                        setTimeout(() => {\r\n                            // debug.log(`Activate note : ${note.key} / ${self.NOTE_ACTIVATING_TIMESTAMP}`);\r\n                            note.status = self.NOTE_STATUS.ACTIVATING;\r\n                            // self.activateNoteList.push(note);\r\n                        }, self.NOTE_ACTIVATING_TIMESTAMP);\r\n\r\n                        setTimeout(() => {\r\n                            // debug.log(`Used note : ${note.key}`);\r\n                            if (note.status === self.NOTE_STATUS.ACTIVATING) {\r\n                                const MISS = `Miss`;\r\n                                note.status = self.NOTE_STATUS.MISSED;\r\n                                self.showPointMatchedByPointAndPosition(MISS, self.getNotePositionByKey(note.key));\r\n                                _ScoreController__WEBPACK_IMPORTED_MODULE_4__[\"default\"].addScore(MISS);\r\n                            }\r\n                        }, self.NOTE_SHOWING_TIMESTAMP);\r\n                    }, note.timestamp - self.NOTE_CHECK_DELAY_TIMESTAMP)\r\n                )\r\n            })(_note);\r\n        }\r\n        this.StartTime = new Date();\r\n    }\r\n\r\n    static stop() {\r\n        this.noteList = [];\r\n        for (const timeoutFunc of this.timeoutFunctionList) {\r\n            clearTimeout(timeoutFunc);\r\n        }\r\n    }\r\n\r\n    static isShiftedUsedKey(key) {\r\n        for (const rule in this.NOTE_POSITION) {\r\n            if (this.SHIFT_USED_NOTE[this.NOTE_POSITION[rule]].indexOf(key) !== -1) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    static setNotePosition(note) {\r\n        const key = note.innerText;\r\n        for (const rule in this.NOTE_POSITION) {\r\n            if (rule.indexOf(key) > -1) {\r\n                const topPosition = 160 * this.NOTE_POSITION[rule];\r\n                note.setAttribute(`position`, this.NOTE_POSITION[rule]);\r\n                note.style.top = `calc(50% - ${320 - topPosition}px`;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    static getNotePositionByKey(key) {\r\n        for (const rule in this.NOTE_POSITION) {\r\n            if (rule.indexOf(key) > -1) {\r\n                return this.NOTE_POSITION[rule];\r\n            }\r\n        }\r\n    }\r\n    static renderMusicNote(_key) {\r\n        const self = this;\r\n        ((key) => {\r\n            const note = document.getElementById(`musicNote_${this.getCurrentNoteIndex()}`);\r\n            // debug.log(`Note      : [${key}] : Assigned to : ${this.currentNoteIndex}`);\r\n            note.innerText = key;\r\n            this.setNotePosition(note);\r\n\r\n            // debug.log(`Render Music Note : [${key}]`, note);\r\n            let classAttributes = `showNote`;\r\n            if (true === this.isShiftedUsedKey(key)) {\r\n                classAttributes += ` shiftedKey`\r\n            }\r\n\r\n            note.setAttribute(`class`, `${this.MUSIC_NOTE_CLASS_NAME} ${classAttributes}`);\r\n            console.log(note)\r\n            setTimeout(() => {\r\n                // keypressedNote.setAttribute(`class`, `hideNote`);\r\n                // debug.log(`Render Music Note : [${key}]`, note);\r\n                note.setAttribute(`class`, `${this.MUSIC_NOTE_CLASS_NAME}`);\r\n                note.innerText = ``;\r\n            }, self.NOTE_SHOWING_TIMESTAMP)\r\n        })(_key);\r\n    }\r\n\r\n    static keypressNote(_key) {\r\n\r\n        _Common_SFXPlayer__WEBPACK_IMPORTED_MODULE_5__[\"default\"].play(`./data/sfx/hat.mp3`);\r\n        ((key) => {\r\n            const keypressedNote = document.getElementById(`keypressNote_${this.getCurrentKeyPressNoteIndex()}`);\r\n            // debug.log(`keypressNote : [${key}] : Assigned to : ${this.currentKeyPressNoteIndex}`);\r\n            keypressedNote.innerText = key;\r\n            this.setNotePosition(keypressedNote);\r\n\r\n            keypressedNote.setAttribute(`class`, `${this.PRESSED_CLASS_NAME} showNote`);\r\n            this.checkPressedKeyCorrected(key);\r\n            setTimeout(() => {\r\n                // keypressedNote.setAttribute(`class`, `hideNote`);\r\n                keypressedNote.setAttribute(`class`, `${this.PRESSED_CLASS_NAME}`);\r\n                keypressedNote.innerText = ``;\r\n            }, 1000)\r\n\r\n        })(_key);\r\n    }\r\n\r\n    static updateCurrentCheckingNoteIndex(key) {\r\n        let tmpIdx = this.currentCheckingNoteIndex;\r\n        const pressedNotePosition = this.getNotePositionByKey(key);\r\n        debug.log(`updateCurrentCheckingNoteIndex key: ${tmpIdx < this.noteList.length}`)\r\n        while (true) {\r\n            if (tmpIdx >= this.noteList.length) {\r\n                return;\r\n            }\r\n            // debug.log(`CHECKING   NOTE : `, this.noteList[tmpIdx]);\r\n            if (this.noteList[tmpIdx].status === this.NOTE_STATUS.IDLE) {\r\n                break;\r\n            }\r\n            if (this.noteList[tmpIdx].status === this.NOTE_STATUS.ACTIVATING) {\r\n                const notePosition = this.getNotePositionByKey(this.noteList[tmpIdx].key);\r\n                // debug.log(`ACTIVATING NOTE : `, this.noteList[tmpIdx] , `with position : ${notePosition}`);\r\n                // debug.log(`this.currentKeyPressNoteIndex : ${this.currentKeyPressNoteIndex}`);\r\n                this.currentCheckingNoteIndex = tmpIdx;\r\n                break;\r\n            }\r\n            tmpIdx++;\r\n        }\r\n    }\r\n\r\n    static showPointMatchedByPointAndPosition(point, position) {\r\n        const _pointMatchedEl = this.pointMatchedList[this.currentPointMatchedIndex];\r\n        ((pointMatchedEl) => {\r\n            pointMatchedEl.innerText = point;\r\n            const prevClass = pointMatchedEl.getAttribute(`class`);\r\n            pointMatchedEl.setAttribute(`class`, `${prevClass} pointDisplay_${point} pointDisplay_${position}`);\r\n            this.currentPointMatchedIndex = ++this.currentPointMatchedIndex % this.MAX_NUM_OF_NOTES;\r\n            console.log(pointMatchedEl)\r\n            setTimeout(() => {\r\n                pointMatchedEl.setAttribute(`class`, prevClass);\r\n                pointMatchedEl.innerText = ``;\r\n            }, 500);\r\n        })(_pointMatchedEl);\r\n    }\r\n\r\n    static calculatePoint(noteTimestamp, keypressTimestamp) {\r\n        debug.log(`calculatePoint : ${keypressTimestamp} - ${noteTimestamp}`);\r\n        const diff = keypressTimestamp - noteTimestamp - this.NOTE_PRESS_DIFF;\r\n        for (const point in this.PointCheck) {\r\n            if (Math.abs(diff) < this.PointCheck[point]) {\r\n                // console.log(`CHECKED ::: ${point}`);\r\n                return point;\r\n            }\r\n        }\r\n    }\r\n\r\n    static setNoteCheckerColorByPoint(key, point) {\r\n        debug.log(`setNoteCheckerColorByPoint(${key}, ${point})`);\r\n        const pos = this.getNotePositionByKey(key);\r\n        const checkerEl = _Common_DOMConatiners__WEBPACK_IMPORTED_MODULE_2__[\"default\"].Containers.GamePlayScreenContainer.keynoteCheckers[pos];\r\n        const prevClassOfCheckerEl = checkerEl.getAttribute(`class`);\r\n        switch (point) {\r\n            case `Perfect`:\r\n            case `Good`:\r\n            case `Bad`:\r\n            case `Miss`:\r\n                checkerEl.setAttribute(`class`, `${prevClassOfCheckerEl} NoteScoreAnimation_${point}`);\r\n                this.showPointMatchedByPointAndPosition(point, pos);\r\n                break;\r\n        }\r\n        setTimeout(() => {\r\n            checkerEl.setAttribute(`class`, prevClassOfCheckerEl);\r\n        }, 1000);\r\n    }\r\n\r\n    static checkPressedKeyCorrected(key) {\r\n        const keypressTimestamp = new Date().getTime() - this.StartTime;\r\n        // debug.log(`Key pressed ${key} (Position : ${this.getNotePositionByKey(key)}) with timestamp : ${keypressTimestamp}`);\r\n        this.updateCurrentCheckingNoteIndex(key);\r\n        if (this.noteList[this.currentCheckingNoteIndex].key === key) {\r\n            this.noteList[this.currentCheckingNoteIndex].status = this.NOTE_STATUS.CATCHED;\r\n            const point = this.calculatePoint(this.noteList[this.currentCheckingNoteIndex].timestamp, keypressTimestamp);\r\n            _ScoreController__WEBPACK_IMPORTED_MODULE_4__[\"default\"].addScore(point);\r\n            this.setNoteCheckerColorByPoint(key, point);\r\n            debug.log(`Check currentCheckingNoteIndex : `, this.currentCheckingNoteIndex)\r\n            document.getElementById(`musicNote_${this.currentCheckingNoteIndex % 100}`).style.visibility = `hidden`;\r\n            setTimeout(() => {\r\n                document.getElementById(`musicNote_${this.currentCheckingNoteIndex % 100}`).style.visibility = `visible`;\r\n            }, 1000);\r\n            // console.log(this.noteList[this.currentCheckingNoteIndex])\r\n            // console.log(document.getElementById(`musicNote_${this.currentCheckingNoteIndex % 100}`))\r\n        }\r\n    }\r\n\r\n    static onkeypress(e) {\r\n        if (true === _BGMPlayer__WEBPACK_IMPORTED_MODULE_3__[\"default\"].isGameStart) {\r\n            if (e.key.length === 1) {\r\n                this.keypressNote(e.key)\r\n            }\r\n        }\r\n\r\n    }\r\n}\n\n//# sourceURL=webpack:///./GameSources/scripts/GamePlayScreen/NoteCreator.js?");

/***/ }),

/***/ "./GameSources/scripts/GamePlayScreen/ScoreController.js":
/*!***************************************************************!*\
  !*** ./GameSources/scripts/GamePlayScreen/ScoreController.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ScoreController)\n/* harmony export */ });\n/* harmony import */ var _Common_Debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Common/Debug */ \"./GameSources/scripts/Common/Debug.js\");\n/* harmony import */ var _Common_DOMConatiners__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Common/DOMConatiners */ \"./GameSources/scripts/Common/DOMConatiners.js\");\n\r\n\r\n\r\nconst debug = new _Common_Debug__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\r\n    filename: `ScoreController`\r\n})\r\n\r\n\r\nclass ScoreController {\r\n\r\n    static SCORE_OF_POINT = {\r\n        Perfect: 1,\r\n        Good: 0.8,\r\n        Bad: 0.3,\r\n        Miss: 0\r\n    }\r\n\r\n    static ComboCount = 0;\r\n\r\n    static PERFECT_SCORE = 1000000;\r\n    static scorePerNote;\r\n    static scoreSum = 0;\r\n\r\n    static initialize(noteList) {\r\n        this.scoreSum = 0;\r\n        this.scorePerNote = this.PERFECT_SCORE / noteList.length;\r\n        _Common_DOMConatiners__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get().GamePlayScreenContainer.GameScore.innerText = this.getFormattedScore();\r\n    }\r\n\r\n    static getFormattedScore() {\r\n        return (`0000000${this.scoreSum.toFixed(0)}`).substr(-7);\r\n    }\r\n\r\n    static addScore(point) {\r\n        this.scoreSum += this.scorePerNote * this.SCORE_OF_POINT[point];\r\n        debug.log(`Update Score :: ${this.getFormattedScore()}`)\r\n        _Common_DOMConatiners__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get().GamePlayScreenContainer.GameScore.innerText = this.getFormattedScore();\r\n        if ((point === `Perfect`) || (point === `Good`)) {\r\n            this.ComboCount++;\r\n        } else {\r\n            this.ComboCount = 0;\r\n            _Common_DOMConatiners__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get().GamePlayScreenContainer.ComboCount.innerText = ``\r\n        }\r\n        if (this.ComboCount > 1) {\r\n            _Common_DOMConatiners__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get().GamePlayScreenContainer.ComboCount.setAttribute(`class`, `ComboCountAnimation`);\r\n            _Common_DOMConatiners__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get().GamePlayScreenContainer.ComboCount.innerHTML = `${this.ComboCount}<br>Combo`\r\n            setTimeout(() => {\r\n                _Common_DOMConatiners__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get().GamePlayScreenContainer.ComboCount.setAttribute(`class`, ``);\r\n            }, 100);\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack:///./GameSources/scripts/GamePlayScreen/ScoreController.js?");

/***/ }),

/***/ "./GameSources/scripts/MainPlayer.js":
/*!*******************************************!*\
  !*** ./GameSources/scripts/MainPlayer.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Common_Debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Common/Debug */ \"./GameSources/scripts/Common/Debug.js\");\n/* harmony import */ var _BGMDatabase__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./BGMDatabase */ \"./GameSources/scripts/BGMDatabase.js\");\n/* harmony import */ var _GamePlayScreen_BGMPlayer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./GamePlayScreen/BGMPlayer */ \"./GameSources/scripts/GamePlayScreen/BGMPlayer.js\");\n/* harmony import */ var _SelectBGMScreen_BGMSelector__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./SelectBGMScreen/BGMSelector */ \"./GameSources/scripts/SelectBGMScreen/BGMSelector.js\");\n/* harmony import */ var _Common_DOMConatiners__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Common/DOMConatiners */ \"./GameSources/scripts/Common/DOMConatiners.js\");\n/* harmony import */ var _Common_KeyboardEventListener__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Common/KeyboardEventListener */ \"./GameSources/scripts/Common/KeyboardEventListener.js\");\n/* harmony import */ var _GamePlayScreen_NoteCreator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./GamePlayScreen/NoteCreator */ \"./GameSources/scripts/GamePlayScreen/NoteCreator.js\");\n/* harmony import */ var _Common_SFXPlayer__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Common/SFXPlayer */ \"./GameSources/scripts/Common/SFXPlayer.js\");\n/* harmony import */ var _GamePlayScreenController__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./GamePlayScreenController */ \"./GameSources/scripts/GamePlayScreenController.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import LoadingController from \"./LoadingController\";\r\n(() => {\r\n    window.onload = async () => {\r\n        _Common_Debug__WEBPACK_IMPORTED_MODULE_0__[\"default\"].setDebugMode(`debug`);\r\n        const debug = new _Common_Debug__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\r\n            filename: `MainPlayer`\r\n        });\r\n        debug.log(`Start`);\r\n        _Common_DOMConatiners__WEBPACK_IMPORTED_MODULE_4__[\"default\"].initialize();\r\n        _Common_SFXPlayer__WEBPACK_IMPORTED_MODULE_7__[\"default\"].initialize();\r\n        await _BGMDatabase__WEBPACK_IMPORTED_MODULE_1__[\"default\"].initialize();\r\n        await _SelectBGMScreen_BGMSelector__WEBPACK_IMPORTED_MODULE_3__[\"default\"].initialize();\r\n        await _GamePlayScreen_BGMPlayer__WEBPACK_IMPORTED_MODULE_2__[\"default\"].initialize();\r\n        _GamePlayScreen_NoteCreator__WEBPACK_IMPORTED_MODULE_6__[\"default\"].initialize();\r\n        // document.getElementById(\"test\").src = BGMPlayer.getCoverImage(\"Night Beach Memories\");\r\n\r\n\r\n        // debug.log(BGMSelector.getBGMListInfo());\r\n\r\n        // KeyboardEventListener.setCurrentMode(\"SelectBGM\");\r\n        // KeyboardEventListener.setCurrentMode(\"SelectBGM\");\r\n        _Common_KeyboardEventListener__WEBPACK_IMPORTED_MODULE_5__[\"default\"].addKeyboardEventListener();\r\n\r\n        // const bgmReady = awiat BGMPlayer\r\n        document.oncontextmenu = (event) => {\r\n            debug.log(`Right click`);\r\n            event.preventDefault();\r\n        };\r\n\r\n        _Common_DOMConatiners__WEBPACK_IMPORTED_MODULE_4__[\"default\"].showMainContainer(_Common_DOMConatiners__WEBPACK_IMPORTED_MODULE_4__[\"default\"].MainContainer.SelectMusicScreen);\r\n\r\n\r\n        // Game Play Test\r\n        // document.onclick = async (e) => {\r\n        //     GamePlayScreenController.startGameByTitle(`두근두근! 드디어!! 대모험 시작!!!`, NoteCreator.Difficulty.HARD);\r\n        // }\r\n\r\n    };\r\n})();\n\n//# sourceURL=webpack:///./GameSources/scripts/MainPlayer.js?");

/***/ }),

/***/ "./GameSources/scripts/SelectBGMScreen/BGMSelector.js":
/*!************************************************************!*\
  !*** ./GameSources/scripts/SelectBGMScreen/BGMSelector.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ BGMSelector)\n/* harmony export */ });\n/* harmony import */ var _Common_Debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Common/Debug */ \"./GameSources/scripts/Common/Debug.js\");\n/* harmony import */ var _BGMDatabase__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../BGMDatabase */ \"./GameSources/scripts/BGMDatabase.js\");\n/* harmony import */ var _Common_DOMConatiners__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Common/DOMConatiners */ \"./GameSources/scripts/Common/DOMConatiners.js\");\n/* harmony import */ var _GamePlayScreenController__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../GamePlayScreenController */ \"./GameSources/scripts/GamePlayScreenController.js\");\n/* harmony import */ var _Common_SFXPlayer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Common/SFXPlayer */ \"./GameSources/scripts/Common/SFXPlayer.js\");\n\r\n\r\n\r\n\r\n\r\n\r\nconst debug = new _Common_Debug__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\r\n    filename: `BGMSelector`\r\n})\r\n\r\nclass BGMSelector {\r\n\r\n    static DIFFICULTY_COLOR = {\r\n        EASY: `green`,\r\n        NORMAL: `blue`,\r\n        HARD: `yellow`,\r\n        XTREME: `red`,\r\n    }\r\n\r\n    static DIFFICULTY = [\r\n        `EASY`, `NORMAL`, `HARD`, `XTREME`\r\n    ]\r\n\r\n    static BGMPreviewPlayerFade = `out`;\r\n\r\n    static BGM_PREVIEW_FADE_DIFF = 0.05;\r\n    static BGM_PREVIEW_FADEOUT_TIMEOUT_START_TIMESTAMP = 3500;\r\n\r\n    static BGM_PREVIEW_FADE_INTERVAL_HANDLER = {\r\n        IN: 0,\r\n        OUT: 0\r\n    }\r\n    static BGM_PREVIEW_FADEOUT_TIMEOUT_HANDLER = 0;\r\n\r\n    static selectedDifficultyIdx = 1;\r\n    static currrentDifficulty = ``;\r\n\r\n    static BGMData = null;\r\n    static selectedMusicIdx;\r\n    static selectedMusicRotationIdx;\r\n\r\n\r\n    static BGM_COVERIMAGE_ROTATE_DEGREE;\r\n\r\n    static currentRotation = 0;\r\n\r\n    // Rotate ref : https://www.youtube.com/watch?v=j1-Ak3WWV_g\r\n    static async initialize() {\r\n        debug.log(`Initializing...`);\r\n\r\n        this.BGMData = _BGMDatabase__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getAllData();\r\n        this.selectedMusicIdx = parseInt(Math.random() * this.BGMData.length);\r\n        this.selectedMusicRotationIdx = this.selectedMusicIdx;\r\n        debug.log(`selectedMusicIdx : `, this.selectedMusicIdx);\r\n        this.BGM_COVERIMAGE_ROTATE_DEGREE = 360 / this.BGMData.length;\r\n\r\n        this.currrentDifficulty = this.DIFFICULTY[this.selectedDifficultyIdx];\r\n        debug.log(`Music Info Rotate degree : ${this.BGM_COVERIMAGE_ROTATE_DEGREE}`);\r\n\r\n        for (let idx = 0; idx < this.BGMData.length; idx++) {\r\n            const rotatedDegree = idx * this.BGM_COVERIMAGE_ROTATE_DEGREE.toFixed(0);\r\n            const bgmInfo = this.BGMData[idx];\r\n            const title = bgmInfo.title;\r\n            const coverImage = bgmInfo.coverImage;\r\n            const span = document.createElement(`span`);\r\n            span.id = `coverImage_${idx}`\r\n            span.setAttribute(`class`, `coverImage`);\r\n            debug.log(`Rotate to : `, rotatedDegree)\r\n            span.style.transform = `rotateY(${rotatedDegree}deg) translateZ(600px)`;\r\n\r\n            const imgTag = document.createElement(`img`);\r\n            imgTag.setAttribute(`class`, `coverImage_imgTag`);\r\n            imgTag.src = coverImage;\r\n            span.appendChild(imgTag)\r\n            // console.log(`rotateY(${idx * this.BGM_COVERIMAGE_ROTATE_DEGREE}deg);`);\r\n\r\n            _Common_DOMConatiners__WEBPACK_IMPORTED_MODULE_2__[\"default\"].get().SelectMusicScreenContainer.CoverImageContainer.appendChild(span);\r\n        }\r\n\r\n        this.setTitleAndDifficultyText();\r\n        this.onBGMSelectChanged();\r\n        // this.playBGMPreview(this.BGMData[0].title);\r\n    }\r\n\r\n    static onBGMSelectChanged() {\r\n        debug.log(`Selected title : [${this.selectedMusicIdx}] ${this.BGMData[this.selectedMusicIdx].title}`);\r\n        this.currentRotation = this.BGM_COVERIMAGE_ROTATE_DEGREE * -this.selectedMusicRotationIdx;\r\n        _Common_DOMConatiners__WEBPACK_IMPORTED_MODULE_2__[\"default\"].get().SelectMusicScreenContainer.CoverImageContainer.style.transform = `translateZ(-500px) perspective(1000px) rotateY(${this.currentRotation}deg)`;\r\n        _Common_SFXPlayer__WEBPACK_IMPORTED_MODULE_4__[\"default\"].play(`SelectMusicScreen/onBGMSelected.mp3`);\r\n        this.playBGMPreview(this.BGMData[this.selectedMusicIdx].title);\r\n    }\r\n\r\n    static setTitleAndDifficultyText() {\r\n        _Common_DOMConatiners__WEBPACK_IMPORTED_MODULE_2__[\"default\"].get().SelectMusicScreenContainer.SelectedMusicInfoContainer.innerHTML =\r\n            `${this.BGMData[this.selectedMusicIdx].title}<br>` +\r\n            `${this.currrentDifficulty}`;\r\n    }\r\n\r\n    static getCurrentDifficulty() {\r\n        return this.DIFFICULTY[this.selectedDifficultyIdx];\r\n    }\r\n\r\n    static onDifficultyChanged() {\r\n        this.currrentDifficulty = this.getCurrentDifficulty();\r\n        const textStrokeColor = this.DIFFICULTY_COLOR[this.currrentDifficulty];\r\n        debug.log(`Difficulty change to : [${this.currrentDifficulty}], stroke : [${textStrokeColor}]`);\r\n        _Common_DOMConatiners__WEBPACK_IMPORTED_MODULE_2__[\"default\"].get().SelectMusicScreenContainer.SelectedMusicInfoContainer.style.webkitTextStroke = `1px ${textStrokeColor}`\r\n    }\r\n\r\n    static resetAudioPreviewPlayer() {\r\n        clearTimeout(this.BGM_PREVIEW_FADEOUT_TIMEOUT_HANDLER);\r\n        clearInterval(this.BGM_PREVIEW_FADE_INTERVAL_HANDLER.IN);\r\n        clearInterval(this.BGM_PREVIEW_FADE_INTERVAL_HANDLER.OUT);\r\n        const player = _Common_DOMConatiners__WEBPACK_IMPORTED_MODULE_2__[\"default\"].get().SelectMusicScreenContainer.BGMPreviewPlayer;\r\n        player.src = null;\r\n        player.volume = 0;\r\n    }\r\n\r\n    static playBGMPreview(title) {\r\n        const self = this;\r\n        debug.log(`playBGMPreview : [${title}}]`);\r\n        this.resetAudioPreviewPlayer()\r\n        const player = _Common_DOMConatiners__WEBPACK_IMPORTED_MODULE_2__[\"default\"].get().SelectMusicScreenContainer.BGMPreviewPlayer;\r\n        player.src = `data/sampleBGM/${title}.mp3`;\r\n        player.play();\r\n        const fadeCount = {\r\n            in: 0,\r\n            out: 0\r\n        }\r\n        if (player.oncanplaythrough === null) {\r\n            player.oncanplaythrough = () => {\r\n                // Fade In\r\n                debug.log(`Sample BGM play : ${player.duration} seconds`);\r\n                debug.log(`Sample BGM Fade in start`);\r\n                self.BGM_PREVIEW_FADE_INTERVAL_HANDLER.IN = setInterval(() => {\r\n                    if (player.volume < 1 - this.BGM_PREVIEW_FADE_DIFF) {\r\n                        player.volume += this.BGM_PREVIEW_FADE_DIFF;\r\n                    } else {\r\n                        clearInterval(self.BGM_PREVIEW_FADE_INTERVAL_HANDLER.IN);\r\n                    }\r\n                }, 100);\r\n\r\n                // Fade out\r\n                debug.log(`Sample BGM Fade out time : ${((player.duration * 1000) - this.BGM_PREVIEW_FADEOUT_TIMEOUT_START_TIMESTAMP)/ 1000 }`);\r\n                self.BGM_PREVIEW_FADEOUT_TIMEOUT_HANDLER = setTimeout(() => {\r\n                    debug.log(`Sample BGM Fade out start`);\r\n                    self.BGM_PREVIEW_FADE_INTERVAL_HANDLER.OUT = setInterval(() => {\r\n                        if (player.volume > this.BGM_PREVIEW_FADE_DIFF) {\r\n                            player.volume -= this.BGM_PREVIEW_FADE_DIFF;\r\n                        } else {\r\n                            clearInterval(self.BGM_PREVIEW_FADE_INTERVAL_HANDLER.OUT);\r\n                        }\r\n                    }, 100);\r\n                }, (player.duration * 1000) - this.BGM_PREVIEW_FADEOUT_TIMEOUT_START_TIMESTAMP);\r\n            }\r\n        }\r\n    }\r\n\r\n    static onBGMSelectorKeyPressed(e) {\r\n        // debug.log(e)\r\n\r\n        const BGMData = this.BGMData;\r\n        // Select BGM\r\n        if (e.key === `ArrowLeft`) {\r\n            this.selectedMusicIdx = (BGMData.length + this.selectedMusicIdx - 1) % BGMData.length;\r\n            this.selectedMusicRotationIdx--;\r\n            this.onBGMSelectChanged();\r\n        } else if (e.key === `ArrowRight`) {\r\n            this.selectedMusicIdx = (this.selectedMusicIdx + 1) % BGMData.length;\r\n            this.selectedMusicRotationIdx++;\r\n            this.onBGMSelectChanged();\r\n            debug.log(`Selected title : [${this.selectedMusicIdx}] ${BGMData[this.selectedMusicIdx].title}`);\r\n        }\r\n        // Select difficulty\r\n        if (e.key === `ArrowUp`) {\r\n            this.selectedDifficultyIdx = (this.DIFFICULTY.length + this.selectedDifficultyIdx - 1) % this.DIFFICULTY.length;\r\n            this.onDifficultyChanged();\r\n        }\r\n        if (e.key === `ArrowDown`) {\r\n            this.selectedDifficultyIdx = (this.selectedDifficultyIdx + 1) % this.DIFFICULTY.length;\r\n            this.onDifficultyChanged();\r\n        } else if ((e.key === `Enter`) || (e.key === ` `)) {\r\n            debug.log(`Selected`);\r\n            this.resetAudioPreviewPlayer();\r\n            _Common_DOMConatiners__WEBPACK_IMPORTED_MODULE_2__[\"default\"].showMainContainer(_Common_DOMConatiners__WEBPACK_IMPORTED_MODULE_2__[\"default\"].MainContainer.GamePlayScreen);\r\n            _GamePlayScreenController__WEBPACK_IMPORTED_MODULE_3__[\"default\"].startGameByTitle(BGMData[this.selectedMusicIdx].title, this.getCurrentDifficulty());\r\n        }\r\n        this.setTitleAndDifficultyText();\r\n    }\r\n}\n\n//# sourceURL=webpack:///./GameSources/scripts/SelectBGMScreen/BGMSelector.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./GameSources/scripts/MainPlayer.js");
/******/ 	
/******/ })()
;